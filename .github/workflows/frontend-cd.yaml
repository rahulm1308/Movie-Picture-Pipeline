name: Frontend Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm run test

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Docker Build Args
        run: echo "REACT_APP_MOVIE_API_URL=${{ secrets.REACT_APP_MOVIE_API_URL }}" > .env

      - name: Build Docker Image
        run: |
          docker build \
            --build-arg REACT_APP_MOVIE_API_URL=${{ secrets.REACT_APP_MOVIE_API_URL }} \
            -t frontend-app:latest .

  ecr-login:
    name: ECR Login
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}

  push:
    name: Push Docker Image to ECR
    runs-on: ubuntu-latest
    needs: ecr-login
    steps:
      - name: Push Docker Image
        run: |
          aws ecr create-repository --repository-name frontend-app || true
          docker tag frontend-app:latest ${{ secrets.ECR_REGISTRY }}/frontend-app:latest
          docker push ${{ secrets.ECR_REGISTRY }}/frontend-app:latest

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: '1.23.0'

      - name: Configure kubectl
        run: aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy Application
        run: |
          kubectl set image deployment/frontend-app frontend-app=${{ secrets.ECR_REGISTRY }}/frontend-app:latest
          kubectl rollout status deployment/frontend-app
